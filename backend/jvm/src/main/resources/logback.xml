<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="15 seconds" packagingData="true" debug="false">
    <import class="ch.qos.logback.classic.encoder.JsonEncoder"/>
    <import class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"/>
    <import class="ch.qos.logback.classic.AsyncAppender"/>
    <import class="ch.qos.logback.core.rolling.RollingFileAppender"/>
    <import class="ch.qos.logback.core.FileAppender"/>
    <import class="ch.qos.logback.core.ConsoleAppender"/>
    <import class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"/>
    <import class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"/>
    <import class="ch.qos.logback.classic.jul.LevelChangePropagator"/>

    <!--<include resource="logback-include.xml"/>-->

    <!-- [%d{ISO8601}] -->
    <property name="pattern"
              value="%d{YYYY-MM-dd HH:mm:ss.SSS z, America/Los_Angeles} %X{trace-id} %-5level %X{remoteHost} [%thread]  %logger{16} - %msg%n%rEx"/>

    <property name="otel-pattern"
              value="%d{YYYY-MM-dd HH:mm:ss.SSS z, America/Los_Angeles} trace_id=%X{trace_id} span_id=%X{span_id} trace_flags=%X{trace_flags} %-5level %logger{16} - %msg%n"/>

    <appender name="APP1" class="RollingFileAppender">
        <file>${LOG_DIR}/app1.log</file>
        <rollingPolicy class="TimeBasedRollingPolicy">
            <!-- weekly rollover -->
            <fileNamePattern>app1.%d{yyyy-ww}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
    </appender>

    <appender name="APP2" class="RollingFileAppender">
        <file>${LOG_DIR}/app2.log</file>
        <rollingPolicy class="SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>app2.%d{yyyy-ww}.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <!-- total size of all archive files, if total size > 20GB, it will delete old archived file -->
            <totalSizeCap>20GB</totalSizeCap>
            <!-- 60 days to keep -->
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder class="PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <outputPatternAsHeader>true</outputPatternAsHeader>
        </encoder>
    </appender>

    <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>

    <!--appender name="ASYNC-APP1" class="AsyncAppender">
        <appender-ref ref="APP1"/>
        <neverBlock>true</neverBlock>
    </appender-->

    <appender name="JSON" class="RollingFileAppender">
        <file>${LOG_DIR}/app.json</file>
        <rollingPolicy class="TimeBasedRollingPolicy">
            <fileNamePattern>app2.%d{yyyy-ww}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="JsonEncoder">
            <withLoggerName>true</withLoggerName>
            <withFormattedMessage>true</withFormattedMessage>
            <withMessage>false</withMessage>
            <withArguments>false</withArguments>
            <withSequenceNumber>false</withSequenceNumber>
            <withContext>false</withContext>
            <withNanoseconds>false</withNanoseconds>
            <withMDC>false</withMDC>
            <withTimestamp>true</withTimestamp>
            <withThrowable>false</withThrowable>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ConsoleAppender">
        <encoder class="PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <!--pattern>${otel-pattern}</pattern-->
            <outputPatternAsHeader>false</outputPatternAsHeader>
        </encoder>
    </appender>

    <!-- Inject the Span and Trace ID to MDC -->
    <appender name="OTEL-MDC" class="io.opentelemetry.instrumentation.logback.mdc.v1_0.OpenTelemetryAppender">
        <appender-ref ref="STDOUT"/>
    </appender>

    <!-- Forwards Logback log events to the OpenTelemetry SDK -->
    <appender name="OTEL" class="io.opentelemetry.instrumentation.logback.appender.v1_0.OpenTelemetryAppender">
        <captureExperimentalAttributes>true</captureExperimentalAttributes>
        <captureMdcAttributes>*</captureMdcAttributes>
    </appender>

    <!-- Reset all previous level configurations of all j.u.l. loggers -->
    <contextListener class="LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <!-- appender-ref ref="OTEL"/-->
        <!-- appender-ref ref="JSON"/-->
        <!-- appender-ref ref="ASYNC-APP1" /-->
    </root>

    <logger name="dev.suresh" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
    </logger>

    <logger name="io.netty" level="INFO"/>
    <logger name="Exposed" level="INFO"/>
    <logger name="dev.suresh.http.MediaApiClient" level="INFO"/>
</configuration>
