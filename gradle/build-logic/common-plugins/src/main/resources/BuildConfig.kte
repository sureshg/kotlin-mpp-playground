@import common.camelCase
@import gg.jte.Content
@import gg.jte.support.ForSupport
@import kotlinx.datetime.*
@import java.net.InetAddress

@param className: String
@param pkg: String
@param version: String
@param catalogVersions: Map<String, String>
@param dependencies: List<String>
@param gitCommit: Map<String, String>

!{val sysProp = { name: String -> @`${System.getProperty(name)}` }}

!{val env = { name: String -> @`${System.getenv(name)}` }}

/* GENERATED, DO NOT EDIT MANUALLY! */
@if(pkg.isNotBlank())package ${pkg}@endif

import kotlinx.datetime.*

object ${className} {

   const val buildTimeEpochMillis = ${Clock.System.now().toEpochMilliseconds()}

   val buildTimeUTC = Instant.fromEpochMilliseconds(buildTimeEpochMillis).toLocalDateTime(TimeZone.UTC)

   val buildTimeLocal = Instant.fromEpochMilliseconds(buildTimeEpochMillis).toLocalDateTime(TimeZone.currentSystemDefault())

   const val buildUser = "${sysProp("user.name")}"

   const val buildOS = "${sysProp("os.name")} ${sysProp("os.version")}-${sysProp("os.arch")}"

   const val buildHost = "${InetAddress.getLocalHost().hostName}"

   const val buildJdkVersion = "${sysProp("java.runtime.version")}"

   const val buildJdkVendor = "${sysProp("java.vendor")}"

   const val version = "${version}"

   @for((k,v) in gitCommit)
   const val ${k} = "${v}"
   @endfor

   @for((k,v) in catalogVersions)
   const val ${k.camelCase} = "${v}"
   @endfor
}
