@import common.camelCase
@import gg.jte.Content
@import gg.jte.support.ForSupport
@import kotlinx.datetime.*
@import java.net.InetAddress

@param className: String
@param pkg: String
@param version: String
@param catalogVersions: Map<String, String>
@param dependencies: List<String>
@param gitCommit: Map<String, String>

/* GENERATED, DO NOT EDIT MANUALLY! */
@if(pkg.isNotBlank())package ${pkg}@endif

import kotlinx.datetime.*

object ${className} {

   val buildTimeEpochMillis = ${Clock.System.now().toEpochMilliseconds()}

   val buildTimeUTC = Instant.fromEpochMilliseconds(buildTimeEpochMillis).toLocalDateTime(TimeZone.UTC)

   val buildTimeLocal = Instant.fromEpochMilliseconds(buildTimeEpochMillis).toLocalDateTime(TimeZone.currentSystemDefault())

   val buildUser = "${System.getProperty("user.name")}"

   val buildOS = "${System.getProperty("os.name")} ${System.getProperty("os.version")}-${System.getProperty("os.arch")}"

   val buildHost = "${InetAddress.getLocalHost().hostName}"

   val buildJdkVersion = "${System.getProperty("java.runtime.version")}"

   val buildJdkVendor = "${System.getProperty("java.vendor")}"

   const val version = "${version}"

   @for((k,v) in gitCommit)
   const val ${k} = "${v}"
   @endfor

   @for((k,v) in catalogVersions)
   const val ${k.camelCase} = "${v}"
   @endfor
}
